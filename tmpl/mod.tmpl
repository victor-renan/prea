package {{.Pkg}}

import (
	"context"
	"github.com/gin-gonic/gin"
	"github.com/jackc/pgx/v5/pgxpool"
	"log"
	"prea/internal/generics/repositories"
)

type {{.Name}}Mod struct {
	Controller {{.Name}}Controller
	Service    {{.Name}}Service
}

func Prepare(connStr string) {{.Name}}Mod {
	ctx := context.Background()
	conn, err := pgxpool.New(ctx, connStr)

	if err != nil {
		log.Fatal(err)
	}

	m := {{.Name}}Mod{}

	m.Service = {{.Name}}Service{
		Repo: repositories.DBGeneric[{{.Name}}]{
			Conn: conn,
			Ctx:  ctx,
		},
	}

	m.Controller = {{.Name}}Controller{
        Service: m.Service,
    }

	return m
}

func (m {{.Name}}Mod) Mount(router *gin.Engine) {
	m.Controller.ForEngine(router)
}

